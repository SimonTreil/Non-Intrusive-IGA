#!/usr/bin/env python
# -*- coding: utf-8 -*-


### ----------------------
### ATTENTION
### Dans aster les noms de variable doivent avoir moins de 8 caractères
### ----------------------


import numpy as np
from numpy import linalg
import scipy.sparse as sp

DEBUT(PAR_LOT='NON',IMPR_MACRO = 'NON')

### Lecture du maillage
asMesh = LIRE_MAILLAGE(FORMAT = 'MED',
		       UNITE = 20,						# Unité logique du fichier de maillage
		       NOM_MED = 'fish',					# Nom du maillage au sein du fichier
		       INFO = 1,
		       )

# Nombre de noeuds physiques du maillage
nbNoeud = asMesh.sdj.DIME.get()[0]
dim = 2 # Dimension du problème

### Affectation des modèles
mod = AFFE_MODELE(MAILLAGE = asMesh,
		  AFFE = (
			  _F(TOUT = 'OUI',				# Modèle de la structure
			    PHENOMENE = 'MECANIQUE',
			    MODELISATION = 'C_PLAN',
			    ),
			  )
			  )

### Définition des matériaux
mat = DEFI_MATERIAU(ELAS= _F(E = 100000.,
			        NU = 0.3,
			       ),			
				)

### Affectation des matériaux
Mat  = AFFE_MATERIAU(MAILLAGE = asMesh,
		     AFFE = (_F(TOUT = 'OUI',
			       MATER = mat,
			       ),
			     ),
			     )

# Calcul des matrices de rigidité élémentaires
matElem = CALC_MATR_ELEM(OPTION='RIGI_MECA', MODELE=mod, CHAM_MATER=Mat)

# Calcul de la numérotation
numDDL = NUME_DDL(MATR_RIGI=matElem, );

# Assemblage de la matrice de rigidité
matAss = ASSE_MATRICE(MATR_ELEM=matElem, NUME_DDL=numDDL)

# Factorisation de la matrice de rigidité et prise en compte des CL de 
# Dirichlet éliminées
#matAss = FACTORISER(reuse=matAss,MATR_ASSE=matAss, METHODE='MUMPS',);

# Conversion de la matrice de rigidité au format sparse
matAssPython = matAss.EXTR_MATR(sparse='True')
matAssPython = sp.coo_matrix((matAssPython[0],(matAssPython[1],matAssPython[2])),shape=(2*nbNoeud,2*nbNoeud)).tocsc()

print(type(matAssPython))
sp.save_npz('/media/treillou/Data/Scolarite/INSA/5A/Projet/Non-Intrusive-IGA/CasTests/PoutreCourbe/KL.npz', matAssPython)
